// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}


model JournalEntry {
  id        Int      @id @default(autoincrement())
  userId            String
  title     String
  content   String?
  mood      Mood @relation(fields: [moodId], references: [id])
  moodId    Int
  tags      TagOnEntries[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Tag {
  id Int @id @default(autoincrement())
  userId String
  name String @unique  
  journalEntries TagOnEntries[]
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model TagOnEntries {
  tag Tag  @relation(fields: [tagId], references: [id], onDelete: Cascade)
  tagId Int
  journalEntry JournalEntry @relation(fields: [journalEntryId], references: [id], onDelete: Cascade)
  journalEntryId Int
  assignedAt DateTime @default(now())
  @@id([tagId, journalEntryId])
}

model Mood {
  id Int @id @default(autoincrement())
  name String
  journalEntries JournalEntry[]
}


model User {
  id            String  @id @default(cuid())
  email         String  @unique
  password      String? // For credential-based login
  name          String?
  image         String?
  createdAt     DateTime @default(now())

  accounts        Account[]
  sessions        Session[]
  journalEntries  JournalEntry[]
  tags            Tag[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  id           String  @id @default(cuid())
  sessionToken String  @unique
  userId       String
  expires      DateTime

  user         User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}
